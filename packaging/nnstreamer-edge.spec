%define     test_script $(pwd)/packaging/run_unittests.sh

Name:       nnstreamer-edge
Summary:    Common library set for nnstreamer-edge
Version:    0.0.1
Release:    1
Group:      Machine Learning/ML Framework
Packager:   Sangjung Woo <sangjung.woo@samsung.com>
License:    Apache-2.0
Source0:    %{name}-%{version}.tar.gz
Source1001: nnstreamer-edge.manifest

BuildRequires:  cmake
BuildRequires:  pkgconfig(paho-mqtt-c)
# TODO remove glib
BuildRequires:  glib2-devel

%if 0%{?unit_test}
BuildRequires:  gtest-devel

%if 0%{?testcoverage}
BuildRequires:	lcov
%endif
%endif

%description
nnstreamer-edge provides remote source nodes for NNStreamer pipelines without GStreamer dependencies.
It also contains communicaton library for sharing server node information & status.

%package devel
Summary: development package for nnstreamer-edge
Requires: nnstreamer-edge = %{version}-%{release}
%description devel
It is a development package for nnstreamer-edge.

%if 0%{?unit_test}
%package unittest
Summary: test program for nnstreamer-edge library
%description unittest
It is a test program for nnstreamer-edge library.

%if 0%{?testcoverage}
%package unittest-coverage
Summary: Unittest coverage result for nnstreamer-edge
%description unittest-coverage
HTML pages of lcov results of nnstreamer-edge generated during rpm build
%endif
%endif

# TODO FIXME enable unittest after migration
%if 0%{?unit_test}
%define enable_unittest -DENABLE_TEST=OFF
%else
%define enable_unittest -DENABLE_TEST=OFF
%endif

%prep
%setup -q
cp %{SOURCE1001} .

%build

%if 0%{?unit_test}
%if 0%{?testcoverage}
# To test coverage, disable optimizations (and should unset _FORTIFY_SOURCE to use -O0)
CFLAGS=`echo $CFLAGS | sed -e "s|-O[1-9]|-O0|g"`
CFLAGS=`echo $CFLAGS | sed -e "s|-Wp,-D_FORTIFY_SOURCE=[1-9]||g"`
CXXFLAGS=`echo $CXXFLAGS | sed -e "s|-O[1-9]|-O0|g"`
CXXFLAGS=`echo $CXXFLAGS | sed -e "s|-Wp,-D_FORTIFY_SOURCE=[1-9]||g"`

export CFLAGS+=" -fprofile-arcs -ftest-coverage -g"
export CXXFLAGS+=" -fprofile-arcs -ftest-coverage -g"
export FFLAGS+=" -fprofile-arcs -ftest-coverage -g"
export LDFLAGS+=" -lgcov"
%endif
%endif # unittest

mkdir -p build
pushd build
%cmake .. \
    -DCMAKE_INSTALL_PREFIX=%{_prefix} \
    -DVERSION=%{version} %{enable_unittest}

make %{?jobs:-j%jobs}
popd

%install
rm -rf %{buildroot}
pushd build
%make_install
popd

%if 0%{?unit_test}
#LD_LIBRARY_PATH=./src bash %{test_script} ./tests/unittest_edge_sensor

%if 0%{?testcoverage}
# 'lcov' generates the date format with UTC time zone by default. Let's replace UTC with KST.
# If you can get a root privilege, run ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
TZ='Asia/Seoul'; export TZ

# Get commit info
VCS=`cat ${RPM_SOURCE_DIR}/nnstreamer-edge.spec | grep "^VCS:" | sed "s|VCS:\\W*\\(.*\\)|\\1|"`

# Create human readable coverage report web page.
# Create null gcda files if gcov didn't create it because there is completely no unit test for them.
find . -name "*.gcno" -exec sh -c 'touch -a "${1%.gcno}.gcda"' _ {} \;
# Remove gcda for meaningless file (CMake's autogenerated)
find . -name "CMakeCCompilerId*.gcda" -delete
find . -name "CMakeCXXCompilerId*.gcda" -delete
# Generate report
lcov -t 'NNStreamer-edge unittest coverage' -o unittest.info -c -d . -b $(pwd) --no-external
# Exclude test files.
lcov -r unittest.info "*/tests/*" -o unittest-filtered.info
# Visualize the report
genhtml -o result unittest-filtered.info -t "NNStreamer-edge %{version}-%{release} ${VCS}" --ignore-errors source -p ${RPM_BUILD_DIR}

mkdir -p %{buildroot}%{_datadir}/nnstreamer-edge/unittest/
cp -r result %{buildroot}%{_datadir}/nnstreamer-edge/unittest/
%endif # testcoverage
%endif # unittest

%clean
rm -rf %{buildroot}

%files
%manifest nnstreamer-edge.manifest
%defattr(-,root,root,-)
%{_libdir}/libnnstreamer-edge.so*

%files devel
%{_includedir}/nnstreamer-edge.h
%{_libdir}/pkgconfig/nnstreamer-edge.pc

%if 0%{?unit_test}
%files unittest
%manifest nnstreamer-edge.manifest
%defattr(-,root,root,-)
%{_bindir}/test_edge_sensor

%if 0%{?testcoverage}
%files unittest-coverage
%{_datadir}/nnstreamer-edge/unittest/*
%endif
%endif # unittest
